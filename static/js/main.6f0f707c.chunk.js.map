{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","index.tsx","App.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","isError","setError","onSubmit","event","searchValue","preventDefault","fetch","then","movieFromServer","json","findMovie","Title","Plot","Poster","imdbID","Response","htmlFor","type","id","placeholder","value","onChange","target","onClick","ReactDOM","render","data","setMovies","find","item","document","getElementById"],"mappings":"4wEAKaA,G,kBAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MADwC,IAExCC,mBAFwC,MAE1B,GAF0B,EAGxCC,EAHwC,EAGxCA,OACAC,EAJwC,EAIxCA,QAJwC,OAMxC,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC7BKK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCF3BG,G,MAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC1BC,mBAAS,IADiB,mBAC7CC,EAD6C,KACtCC,EADsC,OAE1BF,mBAAuB,MAFG,mBAE7CL,EAF6C,KAEtCQ,EAFsC,OAGxBH,oBAAS,GAHe,mBAG7CI,EAH6C,KAGpCC,EAHoC,KAqDpD,OACE,oCACE,0BAAMjB,UAAU,aAAakB,SA3CZ,SAACC,GCpBA,IAACC,EDqBrBD,EAAME,kBCrBeD,EDuBZP,ECtBJS,MALO,8CAKSF,GACpBG,MAAK,SAAAC,GACJ,OAAOA,EAAgBC,WDqBtBF,MAAK,SAAAG,GAAc,IAET9B,EAKL8B,EALFC,MACM9B,EAIJ6B,EAJFE,KACQ9B,EAGN4B,EAHFG,OACQpB,EAENiB,EAFFI,OAIe,SAFbJ,EADFK,SAaAhB,EARiB,CACfnB,QACAC,cACAC,SACAW,SACAV,QC1CY,8BDoCaU,KAW3BM,EAAS,MACTE,GAAS,SAkBX,yBAAKjB,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAS,gBAAWgB,EAAU,YAAc,IAC5CoB,MAAOvB,EACPwB,SA/DS,SAAClB,GAA0C,IACtDiB,EAAUjB,EAAMmB,OAAhBF,MAERtB,EAASsB,GACTnB,GAAS,OA+DH,uBAAGjB,UAAU,kBACVgB,EAAU,uCAA0C,KAIzD,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,oBACVuC,QAhDW,WAChBhC,IAILO,EAAS,IACTH,EAASJ,GACTQ,EAAS,SAsCD,sBAWN,yBAAKf,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,EAAQ,kBAAC,EAAcA,GAAY,O,OE5G5CiC,IAASC,OAAO,mBCCO,WAAO,IAAD,EACC7B,mBAAkB8B,GADnB,mBACpBrC,EADoB,KACZsC,EADY,KAY3B,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAfjB,SAAkBJ,GAChBF,EAAOuC,MAAK,SAAAC,GAAI,OAAIA,EAAKpC,SAAWF,EAAME,UAE1CkC,EAAU,GAAD,mBACJtC,GADI,CAEPE,YDTU,MAASuC,SAASC,eAAe,W","file":"static/js/main.6f0f707c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\n\r\ntype Props = Movie;\r\n\r\nexport const MovieCard: React.FC<Props> = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\ntype Props = {\r\n  movies: Movie[];\r\n};\r\n\r\nexport const MoviesList: React.FC<Props> = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map((movie) => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React, {\n  FC, useState, ChangeEvent, FormEvent,\n} from 'react';\nimport './FindMovie.scss';\nimport { IMDB_URL, getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie(movie: Movie): void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setError(false);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    getMovie(query)\n      .then(findMovie => {\n        const {\n          Title: title,\n          Plot: description,\n          Poster: imgUrl,\n          imdbID: imdbId,\n          Response,\n        } = findMovie;\n\n        if (Response === 'True') {\n          const imdbUrl = IMDB_URL + imdbId;\n          const newMovie = {\n            title,\n            description,\n            imgUrl,\n            imdbId,\n            imdbUrl,\n          };\n\n          setMovie(newMovie);\n        } else {\n          setMovie(null);\n          setError(true);\n        }\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (!movie) {\n      return;\n    }\n\n    setQuery('');\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isError ? 'is-danger' : ''}`}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {isError ? 'Can\\'t find a movie with such a title' : ''}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie ? <MovieCard {...movie} /> : ''}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=7c96957b&t=';\n\nexport const IMDB_URL = 'https://www.imdb.com/title/';\n\nexport const getMovie = (searchValue: string) => {\n  return fetch(API_URL + searchValue)\n    .then(movieFromServer => {\n      return movieFromServer.json();\n    });\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  function addMovie(movie: Movie) {\n    movies.find(item => item.imdbId === movie.imdbId);\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}